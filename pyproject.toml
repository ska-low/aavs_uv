[tool.poetry]
name = "ska-ost-low-uv"
version = "0.0.0"
description = "SKA-low Single-station UV utilities."
authors = ["Danny C Price <daniel.price@skao.int>"]
license = "BSD"
repository = "https://gitlab.com/ska-telescope/ost/ska-ost-low-uv"
documentation = "https://gitlab.com/ska-telescope/ost/ska-ost-low-uv"
include = [
  { path = "config"},
  { path = "datamodel"}
]

[[tool.poetry.source]]
name = 'skao'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'


[tool.poetry.dependencies]
python = ">=3.10"
astropy = ">=5.3"
h5py = ">=3.9"
joblib = ">=1.3.0"
numpy = ">=1.24"
pandas = ">=2.0"
xarray = ">=2023.7"
loguru = ">=0.5"
pyyaml = ">=5.0"
pygdsm   = ">=1.5.4"
pyuvdata = ">=3.0.0"

pyradiosky = {version = ">=1.0.0",  optional = true}
pyuvsim    = {version = ">=1.3.0",  optional = true}
matvis     = {version = ">=1.2.0",  optional = true}

ska-sdp-datamodels = {git = "https://gitlab.com/ska-telescope/sdp/ska-sdp-datamodels", optional = true}
python-casacore = {version = ">=3.5", optional = true}

[tool.poetry.extras]
casa  = ["python-casacore"]
postx = ["pyradiosky", "pyuvsim", "matvis"]
sdp   = ["ska-sdp-datamodels"]
all   = ["python-casacore", "pyradiosky", "pyuvsim", "matvis", "ska-sdp-datamodels"]

[tool.poetry.scripts]
aa_uv = "ska_ost_low_uv.converter:run"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = ">=7.4"
pytest-cov = ">=3.0"
pytest-mpl = ">=0.15"
colored = ">=2.2"
nbmake = ">=1.5"

[tool.poetry.group.docs.dependencies]
sphinx = ">=7.2"
sphinx-rtd-theme = ">=1.3"
myst-parser = ">3.0.0"
ska-ser-sphinx-theme = "^0.1.1"
sphinx-autodoc-typehints = "^1.23.0"

[tool.ruff.lint]
# Setup linting
# E: pycodestyle
# F: Pyflakes
# I: isort
# B: flake8-bugbear
# D: pydocstyle
select = ["E", "F", "I", "B"]
extend-select = ["D"]
ignore = ["E221", "E501", "E741", "D102"]
# E501 - line too long
# E221 - lining up equals signs
# E741 - ambiguous variable names (using l,m,n)
# D102 - missing docstring in public method; ignore due to docstring inheriting approach

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
addopts = "--cov=ska_ost_low_uv --cov-report html --nbmake"
# To regenerate test images, add this argument:
# --mpl-generate-path=tests/baseline
testpaths = ["tests", "notebooks"]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
